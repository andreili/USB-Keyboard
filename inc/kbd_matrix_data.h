#ifndef _KBD_MATRIX_DATA_H_
#define _KBD_MATRIX_DATA_H_

#include <inttypes.h>
#include "kbd_matrix.h"

#define KMX(row, col) ((row << 4) | (col & 0x0f))
																		/* 0x00				0x01				0x02				0x03				0x04				0x05				0x06				0x07 */
const uint8_t kbd_rk86_lat[256] =	 {KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x07 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x0f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x17 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x1f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x27 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x2f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x37 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x3f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x47 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x4f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x57 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x5f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x67 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x6f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x77 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x7f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x87 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x8f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x97 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x9f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xa7 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xaf */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xb7 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xbf */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xc7 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xcf */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xd7 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xdf */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xe7 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xef */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xf7 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15)};/* 0xff */
const uint8_t kbd_rk86_f[4] = 	 	 {KMX(15,15), KMX(15,15), KMX(15,15), KMX(15,15)};

																		/* 0x00				0x01				0x02				0x03				0x04				0x05				0x06				0x07 */
const uint8_t kbd_mc7007_lat[256] ={KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x07 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x0f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x17 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x1f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x27 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x2f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x37 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x3f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x47 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x4f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x57 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x5f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x67 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x6f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x77 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x7f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x87 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x8f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x97 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0x9f */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xa7 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xaf */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xb7 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xbf */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xc7 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xcf */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xd7 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xdf */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xe7 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xef */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15), /* 0xf7 */
																		KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15),	KMX(15,15)};/* 0xff */
const uint8_t kbd_mc7007_f[4] =		 {KMX(15,15), KMX(15,15), KMX(15,15), KMX(15,15)};

#endif
